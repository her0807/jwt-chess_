<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <link rel="icon" href="data:,">
    <title>체스</title>
</head>
<body>
<div align="center">
    <div>
        <h3>방 만들기</h3>

        방이름 <input type="text" id="roomName" name="roomName"/><br>
        비밀번호 <input type="text" id="password" name="password"/>
    </div>
    <button type="submit" onclick="makeRoom()">방만들기</button>
    <script>
        function makeRoom() {
            let roomName = document.getElementById("roomName").value;
            let password = document.getElementById("password").value;
            fetch('/', {
                method: "post",
                body: JSON.stringify({
                    roomName: roomName,
                    password: password
                }),
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                    .then(async res => {
                        if (res.status === 400) {
                            let exceptionMessage = await res.text();
                            alert(exceptionMessage);
                            return;
                        }
                        alert("새로운 방을 생성하였습니다.");
                        location.reload();
                    })
        }
    </script>
</div>

<h3>방 목록</h3>
<ul>
    {{#each rooms}}
        <li>
            <form action="/game/{{roomId}}" method="GET">
                <button>{{this.roomName}}</button>
            </form>

            <button type="submit" onclick="deleteRoom()">삭제</button>
            <script>
                function deleteRoom() {
                    let password = prompt("비밀번호를 입력해주세요.");
                    let roomId = "{{this.roomId}}";
                    fetch('/', {
                        method: "delete",
                        body: JSON.stringify({
                            roomId: roomId,
                            password: password
                        }),
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                            .then(async res => {
                                if (res.status === 400) {
                                    let exceptionMessage = await res.text();
                                    alert(exceptionMessage);
                                    return;
                                }
                                alert("방이 삭제되었습니다.")
                                location.reload();
                            })
                }
            </script>
        </li>
    {{/each}}
</ul>
</div>
</body>
</html>