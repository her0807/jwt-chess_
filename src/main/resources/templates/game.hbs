<!DOCTYPE html>
<html lang="ko">

<head>
    <meta charset="UTF-8">
    <title>♟️ 체스 게임 </title>
    <link rel="stylesheet" href="/src/index.css">
</head>

<body>
<div class="horizontal-vertical-center margin-top50">
    <h1 id="roomInfo">♟️ 체스 게임 </h1>
    <div class="chess-ui">
        <div class="chess-board">
            <div class="chess-row">
                <div id="a8" class="white-square" onclick="clickPiece(id)"></div>
                <div id="b8" class="black-square" onclick="clickPiece(id)"></div>
                <div id="c8" class="white-square" onclick="clickPiece(id)"></div>
                <div id="d8" class="black-square" onclick="clickPiece(id)"></div>
                <div id="e8" class="white-square" onclick="clickPiece(id)"></div>
                <div id="f8" class="black-square" onclick="clickPiece(id)"></div>
                <div id="g8" class="white-square" onclick="clickPiece(id)"></div>
                <div id="h8" class="black-square" onclick="clickPiece(id)"></div>
            </div>

            <div class="chess-row">
                <div id="a7" class="black-square" onclick="clickPiece(id)"></div>
                <div id="b7" class="white-square" onclick="clickPiece(id)"></div>
                <div id="c7" class="black-square" onclick="clickPiece(id)"></div>
                <div id="d7" class="white-square" onclick="clickPiece(id)"></div>
                <div id="e7" class="black-square" onclick="clickPiece(id)"></div>
                <div id="f7" class="white-square" onclick="clickPiece(id)"></div>
                <div id="g7" class="black-square" onclick="clickPiece(id)"></div>
                <div id="h7" class="white-square" onclick="clickPiece(id)"></div>
            </div>

            <div class="chess-row">
                <div id="a6" class="white-square" onclick="clickPiece(id)"></div>
                <div id="b6" class="black-square" onclick="clickPiece(id)"></div>
                <div id="c6" class="white-square" onclick="clickPiece(id)"></div>
                <div id="d6" class="black-square" onclick="clickPiece(id)"></div>
                <div id="e6" class="white-square" onclick="clickPiece(id)"></div>
                <div id="f6" class="black-square" onclick="clickPiece(id)"></div>
                <div id="g6" class="white-square" onclick="clickPiece(id)"></div>
                <div id="h6" class="black-square" onclick="clickPiece(id)"></div>
            </div>

            <div class="chess-row">
                <div id="a5" class="black-square" onclick="clickPiece(id)"></div>
                <div id="b5" class="white-square" onclick="clickPiece(id)"></div>
                <div id="c5" class="black-square" onclick="clickPiece(id)"></div>
                <div id="d5" class="white-square" onclick="clickPiece(id)"></div>
                <div id="e5" class="black-square" onclick="clickPiece(id)"></div>
                <div id="f5" class="white-square" onclick="clickPiece(id)"></div>
                <div id="g5" class="black-square" onclick="clickPiece(id)"></div>
                <div id="h5" class="white-square" onclick="clickPiece(id)"></div>
            </div>

            <div class="chess-row">
                <div id="a4" class="white-square" onclick="clickPiece(id)"></div>
                <div id="b4" class="black-square" onclick="clickPiece(id)"></div>
                <div id="c4" class="white-square" onclick="clickPiece(id)"></div>
                <div id="d4" class="black-square" onclick="clickPiece(id)"></div>
                <div id="e4" class="white-square" onclick="clickPiece(id)"></div>
                <div id="f4" class="black-square" onclick="clickPiece(id)"></div>
                <div id="g4" class="white-square" onclick="clickPiece(id)"></div>
                <div id="h4" class="black-square" onclick="clickPiece(id)"></div>
            </div>

            <div class="chess-row">
                <div id="a3" class="black-square" onclick="clickPiece(id)"></div>
                <div id="b3" class="white-square" onclick="clickPiece(id)"></div>
                <div id="c3" class="black-square" onclick="clickPiece(id)"></div>
                <div id="d3" class="white-square" onclick="clickPiece(id)"></div>
                <div id="e3" class="black-square" onclick="clickPiece(id)"></div>
                <div id="f3" class="white-square" onclick="clickPiece(id)"></div>
                <div id="g3" class="black-square" onclick="clickPiece(id)"></div>
                <div id="h3" class="white-square" onclick="clickPiece(id)"></div>
            </div>

            <div class="chess-row">
                <div id="a2" class="white-square" onclick="clickPiece(id)"></div>
                <div id="b2" class="black-square" onclick="clickPiece(id)"></div>
                <div id="c2" class="white-square" onclick="clickPiece(id)"></div>
                <div id="d2" class="black-square" onclick="clickPiece(id)"></div>
                <div id="e2" class="white-square" onclick="clickPiece(id)"></div>
                <div id="f2" class="black-square" onclick="clickPiece(id)"></div>
                <div id="g2" class="white-square" onclick="clickPiece(id)"></div>
                <div id="h2" class="black-square" onclick="clickPiece(id)"></div>
            </div>

            <div class="chess-row">
                <div id="a1" class="black-square" onclick="clickPiece(id)"></div>
                <div id="b1" class="white-square" onclick="clickPiece(id)"></div>
                <div id="c1" class="black-square" onclick="clickPiece(id)"></div>
                <div id="d1" class="white-square" onclick="clickPiece(id)"></div>
                <div id="e1" class="black-square" onclick="clickPiece(id)"></div>
                <div id="f1" class="white-square" onclick="clickPiece(id)"></div>
                <div id="g1" class="black-square" onclick="clickPiece(id)"></div>
                <div id="h1" class="white-square" onclick="clickPiece(id)"></div>
            </div>
        </div>
        <div class="chess-control">
            <input type="submit" class="w-btn-outline w-btn-gray-outline" id="stopButton" value="게임 중단"/>
            <input type="submit" class="w-btn-outline w-btn-gray-outline" id="statusButton" value="현재 점수 집계"/>

            <div>
                <h3 id="turnInfo">현재턴: </h3>
                <br>
                <h3 id="score"></h3>
            </div>
        </div>

    </div>
</div>
</body>
<script>
    const stopButton = document.getElementById("stopButton");
    const statusButton = document.getElementById("statusButton")
    let current = "";
    let destination = "";
    let roomName = "";
    let roomId = "";
    const horizontalId = ["a", "b", "c", "d", "e", "f", "g", "h"]
    const verticalId = ["1", "2", "3", "4", "5", "6", "7", "8"]

    window.onload = async function () {
        var chessMap = await loadGame();
        await initChessMap(chessMap)
    }

    statusButton.addEventListener("click", async function () {
        await getStatus();
    });

    stopButton.addEventListener("click", async function () {
        requestRemove()
    });

    async function requestRemove() {
        if (!confirm("방을 삭제하시겠습니까?")) {
            alert("방을 유지한채 게임이 종료되었습니다.");
            location.href = "/";
        } else {
            let password = prompt("방 비밀번호를 입력해주세요.");
            await deleteAndFinish(password);
        }
    }

    async function loadGame() {
        var turn = "{{turn}}";
        document.getElementById("turnInfo").innerHTML = "현재 턴: "
            + turn;

        roomId = '{{roomId}}';
        roomName = '{{roomName}}';
        document.getElementById("roomInfo").innerHTML = "♟️ " + roomName + "체스 게임"
        return '{{chessMap}}';
    }

    async function getStatus() {
        let status = await fetch("/game/status/" + roomId, {
            method: "GET"
        }).then(handleErrors)
            .catch(function (error) {
                alert(error.message);
            });
        status = await status.json();

        const whitePlayerScore = status.whitePlayerScore;
        const blackPlayerScore = status.blackPlayerScore;
        const whitePlayerResult = status.whitePlayerResult;
        const blackPlayerResult = status.blackPlayerResult;

        const result = "[White 팀] <br> 점수 : " + whitePlayerScore + "<br> 결과 : "
            + whitePlayerResult
            + "<br><br>[Black 팀] <br> 점수 : " + blackPlayerScore + "<br> 결과 : "
            + blackPlayerResult;

        document.getElementById("score").innerHTML = result;
    }

    async function deleteAndFinish(password) {
        let response = await fetch("/game", {
            method: "DELETE",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({
                roomId: roomId,
                password: password,
            }),
        }).then(handleErrors)
            .catch(function (error) {
                alert(error.message);
            })

        if (response.status === 204) {
            alert("방이 삭제되었습니다.");
            location.href = "/";
        }
    }

    function clickPiece(pieceId) {
        if (current === "") {
            current = pieceId;
            return;
        }
        if (current !== "" && destination === "") {
            destination = pieceId;
            movePiece(current, destination);
            current = "";
            destination = "";
        }
    }

    async function movePiece(current, destination) {
        let board = await requestMovePiece(current, destination);
        await setChessMap(board);
    }

    async function requestMovePiece(current, destination) {
        let boardAndTurnInfo = await fetch("/game/move", {
            method: "PUT",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({
                roomId: roomId,
                current: current,
                destination: destination,
            }),
        }).then(handleErrors)
            .catch(function (error) {
                alert(error.message);
            });
        boardAndTurnInfo = await boardAndTurnInfo.json();
        let isRunning = boardAndTurnInfo.running;
        if (isRunning !== true) {
            alert("킹이 죽어 게임이 종료됩니다.");
            requestRemove();
        }
        document.getElementById("turnInfo").innerHTML = "현재 턴: "
            + boardAndTurnInfo.turn;
        document.getElementById("score").innerHTML = "";
        return boardAndTurnInfo.chessMap;
    }

    async function handleErrors(response) {
        if (!response.ok) {
            let errorMessage = await response.json();
            throw Error(errorMessage.message);
        }
        return response;
    }

    async function initChessMap(response) {
        var chessMap = response.substr(1, response.length -2).split(", ");
        for (var value of chessMap) {
            var pointPiece = value.split(";");
            var point = document.getElementById(pointPiece[0].substr(0, 2));
            var piece = toPieceImageName(pointPiece[1]);
            putPiece(point, piece);
        }
    }

    async function setChessMap(chessMap) {
        removeAllPieces()
        for (let h of horizontalId) {
            for (let v of verticalId) {
                 let positionId = h + v;
                 if (!chessMap[positionId]) {
                    continue;
                 }
                 var point = document.getElementById(positionId);
                 var piece = toPieceImageName(chessMap[positionId]);
                 putPiece(point, piece);
            }
        }
    }

    function putPiece(pointId, piece) {
        const img = document.createElement("img");
        img.style.width = '50px';
        img.style.height = '50px';
        img.style.display = 'block';
        img.style.margin = '15px auto';
        img.src = "/images/pieces/" + piece + ".svg";
        pointId.appendChild(img);
    }

    function toPieceImageName(mapValue) {
        const imageNames = new Map([
            ["P", "black-pawn"], ["R", "black-rook"], ["N", "black-knight"],
            ["B", "black-bishop"],
            ["Q", "black-queen"], ["K", "black-king"], ["p", "white-pawn"],
            ["r", "white-rook"],
            ["n", "white-knight"], ["b", "white-bishop"], ["q", "white-queen"],
            ["k", "white-king"]
        ]);
        return imageNames.get(mapValue);
    }

    function removeAllPieces() {
        for (const horizontal of horizontalId) {
            for (const vertical of verticalId) {
                let pointId = document.getElementById(horizontal+vertical);
                if (pointId.hasChildNodes()) {
                    pointId.removeChild(pointId.firstChild);
                }
            }
        }
    }
</script>
</html>
